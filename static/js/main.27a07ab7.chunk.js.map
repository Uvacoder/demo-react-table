{"version":3,"sources":["components/Table.jsx","components/TableSearch.jsx","App.js","index.js"],"names":["Table","props","react_default","a","createElement","className","onClick","onSort","bind","sortField","sort","data","map","item","key","id","phone","firstName","lastName","email","TableSearch","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onSearch","type","onChange","event","target","App","Rows","setData","_useState3","_useState4","search","setSearch","_useState5","_useState6","setSort","_useState7","_useState8","setSortField","_useState9","_useState10","currentPage","setCurrentPage","filteredData","result","filter","toLowerCase","includes","length","getFilteredData","pageCount","Math","ceil","displayData","_","chunk","Fragment","cloneData","concat","sortPuck","orderBy","dist_default","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","_ref","selected","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","forcePage","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.27a07ab7.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Table(props) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th onClick={props.onSort.bind(null, \"id\")}>\n            ID {props.sortField === \"id\" ? <small>{props.sort}</small> : null}\n          </th>\n          <th onClick={props.onSort.bind(null, \"firstName\")}>\n            First Name{\" \"}\n            {props.sortField === \"firstName\" ? (\n              <small>{props.sort}</small>\n            ) : null}\n          </th>\n          <th onClick={props.onSort.bind(null, \"lastName\")}>\n            Last Name{\" \"}\n            {props.sortField === \"lastName\" ? (\n              <small>{props.sort}</small>\n            ) : null}\n          </th>\n          <th onClick={props.onSort.bind(null, \"email\")}>\n            E-mail{\" \"}\n            {props.sortField === \"email\" ? <small>{props.sort}</small> : null}\n          </th>\n          <th onClick={props.onSort.bind(null, \"phone\")}>\n            Phone{\" \"}\n            {props.sortField === \"phone\" ? <small>{props.sort}</small> : null}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.data.map((item) => (\n          <tr key={item.id + item.phone}>\n            <td>{item.id}</td>\n            <td>{item.firstName}</td>\n            <td>{item.lastName}</td>\n            <td>{item.email}</td>\n            <td>{item.phone}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default (props) => {\n  const [value, setValue] = useState(\"\");\n  const valueChangeHandler = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div className=\"input-group\">\n      <div className=\"input-group-prepend\">\n        <button className=\"btn\" onClick={() => props.onSearch(value)}>\n          Search\n        </button>\n      </div>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        onChange={valueChangeHandler}\n        value={value}\n      />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport Table from \"./components/Table\";\nimport TableSearch from \"./components/TableSearch\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\nimport Rows from \"./generated.json\";\n\nfunction App() {\n  const [data, setData] = useState(Rows);\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(\"asc\");\n  const [sortField, setSortField] = useState(\"id\");\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const onSort = (sortField) => {\n    const cloneData = Rows.concat();\n    const sortPuck = sort === \"asc\" ? \"desc\" : \"asc\";\n    const data = _.orderBy(cloneData, sortField, sort);\n    setData(data);\n    setSort(sortPuck);\n    setSortField(sortField);\n  };\n\n  const pageChangeHandler = ({ selected }) => setCurrentPage(selected);\n\n  const searchHandler = (search) => {\n    setSearch(search);\n    setCurrentPage(0);\n  };\n\n  const getFilteredData = () => {\n    if (!search) {\n      return data;\n    }\n\n    var result = data.filter((item) => {\n      return (\n        item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"email\"].toLowerCase().includes(search.toLowerCase())\n      );\n    });\n    if (!result.length) {\n      result = data;\n    }\n    return result;\n  };\n\n  const pageSize = 15;\n\n  const filteredData = getFilteredData();\n  const pageCount = Math.ceil(filteredData.length / pageSize);\n  const displayData = _.chunk(filteredData, pageSize)[currentPage];\n\n  return (\n    <div className=\"container\">\n      {\n        <React.Fragment>\n          <TableSearch onSearch={searchHandler} />\n          <Table\n            data={displayData}\n            onSort={onSort}\n            sort={sort}\n            sortField={sortField}\n          />\n        </React.Fragment>\n      }\n\n      {data.length > pageSize ? (\n        <ReactPaginate\n          previousLabel={\"<\"}\n          nextLabel={\">\"}\n          breakLabel={\"...\"}\n          breakClassName={\"break-me\"}\n          pageCount={pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={pageChangeHandler}\n          containerClassName={\"pagination\"}\n          activeClassName={\"active\"}\n          pageClassName=\"page-item\"\n          pageLinkClassName=\"page-link\"\n          previousClassName=\"page-item\"\n          nextClassName=\"page-item\"\n          previousLinkClassName=\"page-link\"\n          nextLinkClassName=\"page-link\"\n          forcePage={currentPage}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}