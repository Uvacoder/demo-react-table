{"version":3,"sources":["components/Table/THead.tsx","components/Table/TBody.tsx","components/Table/Table.tsx","components/Search/SearchButton.tsx","components/Search/SearchInput.tsx","components/Search/TableSearch.tsx","hooks/usePagination.tsx","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Thead","props","react_default","a","createElement","onClick","onSort","bind","sortField","sort","TBody","data","map","item","key","id","phone","firstName","lastName","email","Table","className","THead","Table_TBody","SearchButton","_useState","useState","_useState2","Object","slicedToArray","value","onSearch","children","SearchInput","type","onChange","valueChangeHandler","TableSearch","setValue","Search_SearchButton","Search_SearchInput","event","target","DOTS","range","start","end","length","Array","from","_","idx","Pagination","onPageChange","totalCount","_props$siblingCount","siblingCount","currentPage","pageSize","paginationRange","_ref","_ref$siblingCount","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","concat","toConsumableArray","rightRange","middleRange","usePagination","lastPage","classnames","defineProperty","disabled","pageNumber","selected","App","Users","setData","_useState3","_useState4","search","setSearch","_useState5","_useState6","setSort","_useState7","_useState8","setSortField","_useState9","_useState10","setCurrentPage","filteredData","result","filter","toLowerCase","includes","getFilteredData","displayData","chunk","console","log","slice","Search_TableSearch","Table_Table","cloneData","sortType","rows","orderBy","components_Pagination_Pagination","page","ReactDOM","render","src_App","document","getElementById"],"mappings":"yOA8BeA,MA5Bf,SAAeC,GACb,OACEC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,QAASJ,EAAMK,OAAOC,KAAK,KAAM,OAArC,MAC0B,OAApBN,EAAMO,UAAqBN,EAAAC,EAAAC,cAAA,aAAQH,EAAMQ,MAAgB,MAE/DP,EAAAC,EAAAC,cAAA,MAAIC,QAASJ,EAAMK,OAAOC,KAAK,KAAM,cAArC,aACa,IACU,cAApBN,EAAMO,UAA4BN,EAAAC,EAAAC,cAAA,aAAQH,EAAMQ,MAAgB,MAEnEP,EAAAC,EAAAC,cAAA,MAAIC,QAASJ,EAAMK,OAAOC,KAAK,KAAM,aAArC,YACY,IACW,aAApBN,EAAMO,UAA2BN,EAAAC,EAAAC,cAAA,aAAQH,EAAMQ,MAAgB,MAElEP,EAAAC,EAAAC,cAAA,MAAIC,QAASJ,EAAMK,OAAOC,KAAK,KAAM,UAArC,SACS,IACc,UAApBN,EAAMO,UAAwBN,EAAAC,EAAAC,cAAA,aAAQH,EAAMQ,MAAgB,MAE/DP,EAAAC,EAAAC,cAAA,MAAIC,QAASJ,EAAMK,OAAOC,KAAK,KAAM,UAArC,QACQ,IACe,UAApBN,EAAMO,UAAwBN,EAAAC,EAAAC,cAAA,aAAQH,EAAMQ,MAAgB,SCLxDC,MAhBf,SAAeT,GACb,OACEC,EAAAC,EAAAC,cAAA,aACGH,EAAMU,KAAKC,IAAI,SAACC,GAAD,OACdX,EAAAC,EAAAC,cAAA,MAAIU,IAAKD,EAAKE,GAAKF,EAAKG,OACtBd,EAAAC,EAAAC,cAAA,UAAKS,EAAKE,IACVb,EAAAC,EAAAC,cAAA,UAAKS,EAAKI,WACVf,EAAAC,EAAAC,cAAA,UAAKS,EAAKK,UACVhB,EAAAC,EAAAC,cAAA,UAAKS,EAAKM,OACVjB,EAAAC,EAAAC,cAAA,UAAKS,EAAKG,YCMLI,MAbf,SAAenB,GACb,OACEC,EAAAC,EAAAC,cAAA,SAAOiB,UAAU,SACfnB,EAAAC,EAAAC,cAACkB,EAAD,CACEhB,OAAQL,EAAMK,OACdG,KAAMR,EAAMQ,KACZD,UAAWP,EAAMO,YAEnBN,EAAAC,EAAAC,cAACmB,EAAD,CAAOZ,KAAMV,EAAMU,SCAVa,MAVf,SAAsBvB,GAAO,IAAAwB,EACDC,mBAAS,IADRC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBK,EADoBH,EAAA,GAG3B,OAH2BA,EAAA,GAIzBzB,EAAAC,EAAAC,cAAA,UAAQiB,UAAU,MAAMhB,QAAS,kBAAMJ,EAAM8B,SAASD,KACnD7B,EAAM+B,WCMEC,MAXf,SAAqBhC,GACnB,OACIC,EAAAC,EAAAC,cAAA,SACE8B,KAAK,OACLb,UAAU,eACVc,SAAUlC,EAAMmC,mBAChBN,MAAO7B,EAAM6B,SCoBNO,MAxBf,SAAqBpC,GAAY,IAAAwB,EACLC,mBAAS,IADJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACxBK,EADwBH,EAAA,GACjBW,EADiBX,EAAA,GAO/B,OACEzB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,eACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,uBACbnB,EAAAC,EAAAC,cAACmC,EAAD,CAAclB,UAAU,MAAMhB,QAAS,kBAAMJ,EAAM8B,SAASD,KAA5D,WAIF5B,EAAAC,EAAAC,cAACoC,EAAD,CACEN,KAAK,OACLb,UAAU,eACVc,SAdqB,SAACM,GAC1BH,EAASG,EAAMC,OAAOZ,QAclBA,MAAOA,oCCpBFa,EAAO,MAEdC,EAAQ,SAACC,EAAYC,GACzB,IAAIC,EAASD,EAAMD,EAAQ,EAC3B,OAAOG,MAAMC,KAAK,CAAEF,UAAU,SAACG,EAAGC,GAAJ,OAAYA,EAAMN,KCsEnCO,SAvEI,SAACnD,GAAe,IAE/BoD,EAMEpD,EANFoD,aACAC,EAKErD,EALFqD,WAH+BC,EAQ7BtD,EAJFuD,oBAJ+B,IAAAD,EAIhB,EAJgBA,EAK/BE,EAGExD,EAHFwD,YACAC,EAEEzD,EAFFyD,SACArC,EACEpB,EADFoB,UAGIsC,EDNqB,SAAAC,GAKvB,IAJJN,EAIIM,EAJJN,WACAI,EAGIE,EAHJF,SAGIG,EAAAD,EAFJJ,oBAEI,IAAAK,EAFW,EAEXA,EADJJ,EACIG,EADJH,YA6CA,OA3CwBK,kBAAQ,WAC9B,IAAMC,EAAiBC,KAAKC,KAAKX,EAAaI,GAI9C,GAFyBF,EAAe,GAEhBO,EACtB,OAAOnB,EAAM,EAAGmB,GAGlB,IAAMG,EAAmBF,KAAKG,IAAIV,EAAcD,EAAc,GACxDY,EAAoBJ,KAAKK,IAC7BZ,EAAcD,EACdO,GAGIO,EAAqBJ,EAAmB,EACxCK,EAAsBH,EAAoBL,EAAiB,EAE3DS,EAAiB,EACjBC,EAAgBV,EAEtB,IAAKO,GAAsBC,EAAqB,CAC9C,IACIG,EAAY9B,EAAM,EADF,EAAI,EAAIY,GAG5B,SAAAmB,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAW8C,GAAX,CAAsB/B,EAAMoB,IAG9B,GAAIO,IAAuBC,EAAqB,CAC9C,IACIM,EAAajC,EACfmB,GAFmB,EAAI,EAAIP,GAEO,EAClCO,GAEF,OAAQS,EAAgB7B,GAAxBgC,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAiCiD,IAGnC,GAAIP,GAAsBC,EAAqB,CAC7C,IAAIO,EAAclC,EAAMsB,EAAkBE,GAC1C,OAAQI,EAAgB7B,GAAxBgC,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAiCkD,GAAjC,CAA8CnC,EAAM8B,MAErD,CAACnB,EAAYI,EAAUF,EAAcC,ICzChBsB,CAAc,CACpCtB,cACAH,aACAE,eACAE,aAGF,GAAIC,EAAgBZ,OAAS,EAC3B,OAAO,KAGT,IAQIiC,EAAWrB,EAAgBA,EAAgBZ,QAE/C,OACE7C,EAAAC,EAAAC,cAAA,MACEiB,UAAW4D,IAAW,uBAADrD,OAAAsD,EAAA,EAAAtD,CAAA,GAA4BP,EAAYA,KAE7DnB,EAAAC,EAAAC,cAAA,MACEiB,UAAW4D,IAAW,kBAAmB,CACvCE,SAA0B,IAAhB1B,IAEZpD,QAda,WACjBgD,EAAaI,EAAc,KAevBvD,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,gBAEhBsC,EAAgB/C,IAAI,SAACwE,GACpB,OAAIA,IAAezC,EACVzC,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,uBAAuBP,IAAKsE,GAA1C,UAIPlF,EAAAC,EAAAC,cAAA,MAAIU,IAAKsE,EACP/D,UAAW4D,IAAW,kBAAmB,CACvCI,SAAUD,IAAe3B,IAE3BpD,QAAS,kBAAMgD,EAAa+B,KAE3BA,KAIPlF,EAAAC,EAAAC,cAAA,MACEiB,UAAW4D,IAAW,kBAAmB,CACvCE,SAAU1B,IAAgBuB,IAE5B3E,QA1CS,WACbgD,EAAaI,EAAc,KA2CvBvD,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,iCCeRiE,MA5Ef,WAAe,IAAA7D,EACWC,mBAAS6D,GADpB5D,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNd,EADMgB,EAAA,GACA6D,EADA7D,EAAA,GAAA8D,EAEe/D,mBAAS,IAFxBgE,EAAA9D,OAAAC,EAAA,EAAAD,CAAA6D,EAAA,GAENE,EAFMD,EAAA,GAEEE,EAFFF,EAAA,GAAAG,EAGWnE,mBAAS,OAHpBoE,EAAAlE,OAAAC,EAAA,EAAAD,CAAAiE,EAAA,GAGNpF,EAHMqF,EAAA,GAGAC,EAHAD,EAAA,GAAAE,EAIqBtE,mBAAS,MAJ9BuE,EAAArE,OAAAC,EAAA,EAAAD,CAAAoE,EAAA,GAINxF,EAJMyF,EAAA,GAIKC,EAJLD,EAAA,GAAAE,EAKyBzE,mBAAS,GALlC0E,EAAAxE,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,GAKN1C,EALM2C,EAAA,GAKOC,EALPD,EAAA,GA6CPE,EAvBkB,WACtB,IAAKX,EACH,OAAOhF,EAGT,IAAI4F,EAAS5F,EAAK6F,OAAO,SAAC3F,GACxB,OACEA,EAAI,UAAc4F,cAAcC,SAASf,EAAOc,gBAChD5F,EAAI,SAAa4F,cAAcC,SAASf,EAAOc,gBAC/C5F,EAAI,MAAU4F,cAAcC,SAASf,EAAOc,gBAC5C5F,EAAI,MAAU4F,cAAcC,SAASf,EAAOc,iBAQhD,OAJKF,EAAOxD,SACVwD,EAAS5F,GAGJ4F,EAKYI,GACfC,EAAc1D,IAAE2D,MAAMP,EAHX,IAGmC7C,GAUpD,OARAqD,QAAQC,IAAItD,GAEaK,kBAAQ,WAC/B,IAAMU,EARS,IAQSf,EAAc,GAChCgB,EAAgBD,EATP,GAUf,OAAO7D,EAAKqG,MAAMxC,EAAgBC,IACjC,CAAChB,IAGFvD,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aACbnB,EAAAC,EAAAC,cAAC6G,EAAD,CAAalF,SAzCK,SAAC4D,GACrBC,EAAUD,GACVU,EAAe,MAwCbnG,EAAAC,EAAAC,cAAC8G,EAAD,CACEvG,KAAMiG,EACNtG,OAtDS,SAACE,GACd,IAAM2G,EAAYxG,EAAKgE,SACjByC,EAAoB,QAAT3G,EAAiB,OAAS,MACrC4G,EAAOnE,IAAEoE,QAAQH,EAAW3G,EAAWC,GAE7C+E,EAAQ6B,GACRtB,EAAQqB,GACRlB,EAAa1F,IAgDTC,KAAMA,EACND,UAAWA,IAEbN,EAAAC,EAAAC,cAACmH,EAAD,CACElG,UAAU,iBACVoC,YAAaA,EACbH,WAAY3C,EAAKoC,OACjBW,SA1BW,GA2BXL,aAAc,SAACmE,GAAD,OAAenB,EAAemB,QC3EpDC,IAASC,OAAOxH,EAAAC,EAAAC,cAACuH,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b046baff.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Thead(props: any) {\n  return (\n    <thead>\n      <tr>\n        <th onClick={props.onSort.bind(null, \"id\")}>\n          ID {props.sortField === \"id\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"firstName\")}>\n          First Name{\" \"}\n          {props.sortField === \"firstName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"lastName\")}>\n          Last Name{\" \"}\n          {props.sortField === \"lastName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"email\")}>\n          E-mail{\" \"}\n          {props.sortField === \"email\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"phone\")}>\n          Phone{\" \"}\n          {props.sortField === \"phone\" ? <small>{props.sort}</small> : null}\n        </th>\n      </tr>\n    </thead>\n  );\n}\n\nexport default Thead;\n","import React from \"react\";\n\nfunction TBody(props: any) {\n  return (\n    <tbody>\n      {props.data.map((item: any) => (\n        <tr key={item.id + item.phone}>\n          <td>{item.id}</td>\n          <td>{item.firstName}</td>\n          <td>{item.lastName}</td>\n          <td>{item.email}</td>\n          <td>{item.phone}</td>\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nexport default TBody;\n","import React from \"react\";\nimport THead from \"./THead\";\nimport TBody from \"./TBody\";\n\nfunction Table(props: any) {\n  return (\n    <table className=\"table\">\n      <THead\n        onSort={props.onSort}\n        sort={props.sort}\n        sortField={props.sortField}\n      />\n      <TBody data={props.data} />\n    </table>\n  );\n}\n\nexport default Table;\n","import React, { useState } from \"react\";\n\nfunction SearchButton(props) {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <button className=\"btn\" onClick={() => props.onSearch(value)}>\n      {props.children}\n    </button>\n  );\n}\n\nexport default SearchButton;\n","import React from \"react\";\n\nfunction SearchInput(props) {\n  return (\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        onChange={props.valueChangeHandler}\n        value={props.value}\n      />\n  );\n}\n\nexport default SearchInput;\n","import React, { useState } from \"react\";\nimport SearchButton from \"./SearchButton\";\nimport SearchInput from \"./SearchInput\";\n\nfunction TableSearch(props: any) {\n  const [value, setValue] = useState(\"\");\n\n  const valueChangeHandler = (event: any) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div className=\"input-group\">\n      <div className=\"input-group-prepend\">\n        <SearchButton className=\"btn\" onClick={() => props.onSearch(value)}>\n          Search\n        </SearchButton>\n      </div>\n      <SearchInput\n        type=\"text\"\n        className=\"form-control\"\n        onChange={valueChangeHandler}\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default TableSearch;\n","import { useMemo } from \"react\";\n\nexport const DOTS = \"...\";\n\nconst range = (start: any, end: any) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount = 1,\n  currentPage,\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    const totalPageNumbers = siblingCount + 5;\n\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { usePagination, DOTS } from \"../../hooks/usePagination\";\nimport \"../../styles/pagination.scss\";\n\nconst Pagination = (props: any) => {\n  const {\n    onPageChange,\n    totalCount,\n    siblingCount = 2,\n    currentPage,\n    pageSize,\n    className,\n  } = props;\n\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  });\n\n  if (paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange.length];\n\n  return (\n    <ul\n      className={classnames(\"pagination-container\", { [className]: className })}\n    >\n      <li\n        className={classnames(\"pagination-item\", {\n          disabled: currentPage === 1,\n        })}\n        onClick={onPrevious}\n      >\n        <div className=\"arrow left\" />\n      </li>\n      {paginationRange.map((pageNumber) => {\n        if (pageNumber === DOTS) {\n          return <li className=\"pagination-item dots\" key={pageNumber}>&#8230;</li>;\n        }\n\n        return (\n          <li key={pageNumber}\n            className={classnames(\"pagination-item\", {\n              selected: pageNumber === currentPage,\n            })}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </li>\n        );\n      })}\n      <li\n        className={classnames(\"pagination-item\", {\n          disabled: currentPage === lastPage,\n        })}\n        onClick={onNext}\n      >\n        <div className=\"arrow right\" />\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useMemo } from \"react\";\nimport _ from \"lodash\";\n\nimport Table from \"./components/Table/Table\";\nimport TableSearch from \"./components/Search/TableSearch\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport Users from \"./generated.json\";\nimport \"./styles/styles.scss\";\n\nfunction App() {\n  const [data, setData] = useState(Users);\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(\"asc\");\n  const [sortField, setSortField] = useState(\"id\");\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onSort = (sortField: any) => {\n    const cloneData = data.concat();\n    const sortType = sort === \"asc\" ? \"desc\" : \"asc\";\n    const rows = _.orderBy(cloneData, sortField, sort);\n\n    setData(rows);\n    setSort(sortType);\n    setSortField(sortField);\n  };\n\n  const searchHandler = (search: any) => {\n    setSearch(search);\n    setCurrentPage(0);\n  };\n\n  const getFilteredData = () => {\n    if (!search) {\n      return data;\n    }\n\n    let result = data.filter((item: any) => {\n      return (\n        item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"email\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"phone\"].toLowerCase().includes(search.toLowerCase())\n      );\n    });\n\n    if (!result.length) {\n      result = data;\n    }\n\n    return result;\n  };\n\n  const pageSize = 15;\n\n  const filteredData = getFilteredData();\n  const displayData = _.chunk(filteredData, pageSize)[currentPage]\n\n  console.log(currentPage);\n\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * pageSize;\n    const lastPageIndex = firstPageIndex + pageSize;\n    return data.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage]);\n\n  return (\n    <div className=\"container\">\n      <TableSearch onSearch={searchHandler} />\n      <Table\n        data={displayData}\n        onSort={onSort}\n        sort={sort}\n        sortField={sortField}\n      />\n      <Pagination\n        className=\"pagination-bar\"\n        currentPage={currentPage}\n        totalCount={data.length}\n        pageSize={pageSize}\n        onPageChange={(page: any) => setCurrentPage(page)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}