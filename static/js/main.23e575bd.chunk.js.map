{"version":3,"sources":["hooks/usePagination.tsx","components/Pagination/Pagination.tsx","components/Table/THead.tsx","components/Table/TBody.tsx","components/Table/Table.tsx","components/Search/SearchInput.tsx","components/Table/TableSearch.tsx","utils/pages.js","App.tsx","index.tsx"],"names":["DOTS","range","start","end","length","Array","from","_","idx","Pagination","props","onPageChange","totalCount","_props$siblingCount","siblingCount","currentPage","pageSize","className","paginationRange","_ref","_ref$siblingCount","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","concat","Object","toConsumableArray","rightRange","middleRange","usePagination","lastPage","react_default","a","createElement","classnames","defineProperty","disabled","onClick","map","pageNumber","key","selected","Thead","onSort","bind","sortField","sort","TBody","data","item","id","phone","firstName","lastName","email","Table","THead","Table_TBody","SearchInput","onChange","value","type","placeholder","e","target","TableSearch","search","setSearch","Search_SearchInput","getPageCount","limit","App","_useState","useState","Users","_useState2","slicedToArray","setData","_useState3","_useState4","_useState5","_useState6","setSort","_useState7","_useState8","setSortField","_useState9","_useState10","setCurrentPage","_useState11","_useState12","setTotalPages","useEffect","filteredData","result","filter","toLowerCase","includes","getFilteredData","displayData","chunk","Table_TableSearch","Table_Table","cloneData","sortType","rows","orderBy","components_Pagination_Pagination","page","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.23e575bd.chunk.js","sourcesContent":["import { useMemo } from \"react\";\n\nexport const DOTS = \"...\";\n\nconst range = (start: any, end: any) => {\n    let length = end - start + 1;\n    return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n    totalCount,\n    pageSize,\n    siblingCount = 1,\n    currentPage,\n}) => {\n    const paginationRange = useMemo(() => {\n        const totalPageCount = Math.ceil(totalCount / pageSize);\n\n        const totalPageNumbers = siblingCount + 5;\n\n        if (totalPageNumbers >= totalPageCount) {\n            return range(1, totalPageCount);\n        }\n\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n        const rightSiblingIndex = Math.min(\n            currentPage + siblingCount,\n            totalPageCount\n        );\n\n        const shouldShowLeftDots = leftSiblingIndex > 2;\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n        const firstPageIndex = 1;\n        const lastPageIndex = totalPageCount;\n\n        if (!shouldShowLeftDots && shouldShowRightDots) {\n            let leftItemCount = 3 + 2 * siblingCount;\n            let leftRange = range(1, leftItemCount);\n\n            return [...leftRange, DOTS, totalPageCount];\n        }\n\n        if (shouldShowLeftDots && !shouldShowRightDots) {\n            let rightItemCount = 3 + 2 * siblingCount;\n            let rightRange = range(\n                totalPageCount - rightItemCount + 1,\n                totalPageCount\n            );\n            return [firstPageIndex, DOTS, ...rightRange];\n        }\n\n        if (shouldShowLeftDots && shouldShowRightDots) {\n            let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n        }\n    }, [totalCount, pageSize, siblingCount, currentPage]);\n\n    return paginationRange;\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { usePagination, DOTS } from \"../../hooks/usePagination\";\nimport \"../../styles/pagination.scss\";\n\nconst Pagination = (props: any) => {\n  const {\n    onPageChange,\n    totalCount,\n    siblingCount = 2,\n    currentPage,\n    pageSize,\n    className,\n  } = props;\n\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  });\n\n  if (paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange.length - 1];\n\n  return (\n    <ul\n      className={classnames(\"pagination-container\", { [className]: className })}\n    >\n      <li\n        className={classnames(\"pagination-item\", {\n          disabled: currentPage === 1,\n        })}\n        onClick={onPrevious}\n      >\n        <div className=\"arrow left\" />\n      </li>\n      {paginationRange.map((pageNumber) => {\n        if (pageNumber === DOTS) {\n          return (\n            <li className=\"pagination-item dots\" key={pageNumber}>\n              &#8230;\n            </li>\n          );\n        }\n\n        return (\n          <li\n            key={pageNumber}\n            className={classnames(\"pagination-item\", {\n              selected: pageNumber === currentPage,\n            })}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </li>\n        );\n      })}\n      <li\n        className={classnames(\"pagination-item\", {\n          disabled: currentPage === lastPage,\n        })}\n        onClick={onNext}\n      >\n        <div className=\"arrow right\" />\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nfunction Thead(props: any) {\n  return (\n    <thead>\n      <tr>\n        <th onClick={props.onSort.bind(null, \"id\")}>\n          ID {props.sortField === \"id\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"firstName\")}>\n          First Name{\" \"}\n          {props.sortField === \"firstName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"lastName\")}>\n          Last Name{\" \"}\n          {props.sortField === \"lastName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"email\")}>\n          E-mail{\" \"}\n          {props.sortField === \"email\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"phone\")}>\n          Phone{\" \"}\n          {props.sortField === \"phone\" ? <small>{props.sort}</small> : null}\n        </th>\n      </tr>\n    </thead>\n  );\n}\n\nexport default Thead;\n","import React from \"react\";\n\nfunction TBody(props: any) {\n  return (\n    <tbody>\n      {props.data.map((item: any) => (\n        <tr key={item.id + item.phone}>\n          <td>{item.id}</td>\n          <td>{item.firstName}</td>\n          <td>{item.lastName}</td>\n          <td>{item.email}</td>\n          <td>{item.phone}</td>\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nexport default TBody;\n","import React from \"react\";\nimport THead from \"./THead\";\nimport TBody from \"./TBody\";\n\nfunction Table(props: any) {\n    return (\n        <table className=\"table\">\n            <THead\n                onSort={props.onSort}\n                sort={props.sort}\n                sortField={props.sortField}\n            />\n            <TBody data={props.data} />\n        </table>\n    );\n}\n\nexport default Table;\n","import React from \"react\";\n\nfunction SearchInput({ onChange, value }) {\n    return (\n        <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search...\"\n            onChange={(e) => onChange(e.target.value)}\n            value={value}\n        />\n    );\n}\n\nexport default SearchInput;\n","import React from \"react\";\nimport SearchInput from \"../Search/SearchInput\";\n\nfunction TableSearch({ search, setSearch }) {\n    return (\n        <div className=\"input-group\">\n            <SearchInput value={search} onChange={setSearch} />\n        </div>\n    );\n}\n\nexport default TableSearch;\n","export const getPageCount = (totalCount, limit) => {\n    return Math.ceil(totalCount / limit);\n};\n\nexport const getPagesArray = (totalPages) => {\n    let result = [];\n\n    for (let i = 0; i < totalPages; i++) {\n        result.push(i + 1);\n    }\n\n    return result;\n};\n","import _ from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport Pagination2 from \"./components/Pagination2/Pagination2\";\nimport Table from \"./components/Table/Table\";\nimport TableSearch from \"./components/Table/TableSearch\";\nimport Users from \"./generated.json\";\nimport \"./styles/styles.scss\";\nimport { getPageCount } from \"./utils/pages\";\n\nfunction App() {\n    const [data, setData] = useState(Users);\n    const [search, setSearch] = useState(\"\");\n    const [sort, setSort] = useState(\"asc\");\n    const [sortField, setSortField] = useState(\"id\");\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [totalPages, setTotalPages] = useState(0);\n    const limit = 15;\n\n    useEffect(() => {\n        const totalCount = data.length;\n        setTotalPages(getPageCount(totalCount, limit));\n    }, [])\n\n    const onSort = (sortField: any) => {\n        const cloneData = data.concat();\n        const sortType = sort === \"asc\" ? \"desc\" : \"asc\";\n        const rows = _.orderBy(cloneData, sortField, sort);\n\n        setData(rows);\n        setSort(sortType);\n        setSortField(sortField);\n    };\n\n    const searchHandler = (search: any) => {\n        setSearch(search);\n        setCurrentPage(1);\n    };\n\n    const getFilteredData = () => {\n        if (!search) {\n            return data;\n        }\n\n        let result = data.filter((item: any) => {\n            return (\n                item[\"firstName\"]\n                    .toLowerCase()\n                    .includes(search.toLowerCase()) ||\n                item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n                item[\"email\"].toLowerCase().includes(search.toLowerCase()) ||\n                item[\"phone\"].toLowerCase().includes(search.toLowerCase())\n            );\n        });\n\n        if (!result.length) {\n            result = data;\n        }\n\n        return result;\n    };\n\n    function changePage(page) {\n        setCurrentPage(page);\n    }\n\n\n    const filteredData = getFilteredData();\n    const displayData = _.chunk(filteredData, 15)[currentPage - 1];\n\n    return (\n        <div className=\"container\">\n            <TableSearch search={search} setSearch={searchHandler} />\n            <Table\n                data={displayData}\n                onSort={onSort}\n                sort={sort}\n                sortField={sortField}\n            />\n            <Pagination\n                className=\"pagination-bar\"\n                currentPage={currentPage}\n                totalCount={data.length}\n                pageSize={15}\n                onPageChange={changePage}\n            />\n            {/* <Pagination2\n                page={currentPage}\n                changePage={changePage}\n                totalPages={totalPages}\n            /> */}\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}