{"version":3,"sources":["components/Table/THead.tsx","components/Table/TBody.tsx","components/Table/Table.tsx","components/Search/SearchInput.tsx","components/Table/TableSearch.tsx","hooks/usePagination.tsx","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Thead","props","react_default","a","createElement","onClick","onSort","bind","sortField","sort","TBody","data","map","item","key","id","phone","firstName","lastName","email","Table","className","THead","Table_TBody","SearchInput","_ref","onChange","value","type","placeholder","e","target","TableSearch","search","setSearch","Search_SearchInput","DOTS","range","start","end","length","Array","from","_","idx","Pagination","onPageChange","totalCount","_props$siblingCount","siblingCount","currentPage","pageSize","paginationRange","_ref$siblingCount","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","concat","Object","toConsumableArray","rightRange","middleRange","usePagination","lastPage","classnames","defineProperty","disabled","pageNumber","selected","App","_useState","useState","Users","_useState2","slicedToArray","setData","_useState3","_useState4","_useState5","_useState6","setSort","_useState7","_useState8","setSortField","_useState9","_useState10","setCurrentPage","filteredData","result","filter","toLowerCase","includes","getFilteredData","displayData","chunk","slice","Table_TableSearch","Table_Table","cloneData","sortType","rows","orderBy","components_Pagination_Pagination","page","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fbab2085.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Thead(props: any) {\n  return (\n    <thead>\n      <tr>\n        <th onClick={props.onSort.bind(null, \"id\")}>\n          ID {props.sortField === \"id\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"firstName\")}>\n          First Name{\" \"}\n          {props.sortField === \"firstName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"lastName\")}>\n          Last Name{\" \"}\n          {props.sortField === \"lastName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"email\")}>\n          E-mail{\" \"}\n          {props.sortField === \"email\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"phone\")}>\n          Phone{\" \"}\n          {props.sortField === \"phone\" ? <small>{props.sort}</small> : null}\n        </th>\n      </tr>\n    </thead>\n  );\n}\n\nexport default Thead;\n","import React from \"react\";\n\nfunction TBody(props: any) {\n  return (\n    <tbody>\n      {props.data.map((item: any) => (\n        <tr key={item.id + item.phone}>\n          <td>{item.id}</td>\n          <td>{item.firstName}</td>\n          <td>{item.lastName}</td>\n          <td>{item.email}</td>\n          <td>{item.phone}</td>\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nexport default TBody;\n","import React from \"react\";\nimport THead from \"./THead\";\nimport TBody from \"./TBody\";\n\nfunction Table(props: any) {\n    return (\n        <table className=\"table\">\n            <THead\n                onSort={props.onSort}\n                sort={props.sort}\n                sortField={props.sortField}\n            />\n            <TBody data={props.data} />\n        </table>\n    );\n}\n\nexport default Table;\n","import React, { useState } from \"react\";\n\nfunction SearchInput({ onChange, value }) {\n    return (\n        <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search...\"\n            onChange={(e) => onChange(e.target.value)}\n            value={value}\n        />\n    );\n}\n\nexport default SearchInput;\n","import React, { useState } from \"react\";\nimport SearchInput from \"../Search/SearchInput\";\n\nfunction TableSearch({ search, setSearch }) {\n    return (\n        <div className=\"input-group\">\n            <SearchInput value={search} onChange={setSearch} />\n        </div>\n    );\n}\n\nexport default TableSearch;\n","import { useMemo } from \"react\";\n\nexport const DOTS = \"...\";\n\nconst range = (start: any, end: any) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount = 1,\n  currentPage,\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    const totalPageNumbers = siblingCount + 5;\n\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { usePagination, DOTS } from \"../../hooks/usePagination\";\nimport \"../../styles/pagination.scss\";\n\nconst Pagination = (props: any) => {\n  const {\n    onPageChange,\n    totalCount,\n    siblingCount = 2,\n    currentPage,\n    pageSize,\n    className,\n  } = props;\n\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  });\n\n  if (paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange.length];\n\n  return (\n    <ul\n      className={classnames(\"pagination-container\", { [className]: className })}\n    >\n      <li\n        className={classnames(\"pagination-item\", {\n          disabled: currentPage === 1,\n        })}\n        onClick={onPrevious}\n      >\n        <div className=\"arrow left\" />\n      </li>\n      {paginationRange.map((pageNumber) => {\n        if (pageNumber === DOTS) {\n          return (\n            <li className=\"pagination-item dots\" key={pageNumber}>\n              &#8230;\n            </li>\n          );\n        }\n\n        return (\n          <li\n            key={pageNumber}\n            className={classnames(\"pagination-item\", {\n              selected: pageNumber === currentPage,\n            })}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </li>\n        );\n      })}\n      <li\n        className={classnames(\"pagination-item\", {\n          disabled: currentPage === lastPage,\n        })}\n        onClick={onNext}\n      >\n        <div className=\"arrow right\" />\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useMemo } from \"react\";\nimport _ from \"lodash\";\n\nimport Table from \"./components/Table/Table\";\nimport TableSearch from \"./components/Table/TableSearch\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport Users from \"./generated.json\";\nimport \"./styles/styles.scss\";\n\nfunction App() {\n    const [data, setData] = useState(Users);\n    const [search, setSearch] = useState(\"\");\n    const [sort, setSort] = useState(\"asc\");\n    const [sortField, setSortField] = useState(\"id\");\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const onSort = (sortField: any) => {\n        const cloneData = data.concat();\n        const sortType = sort === \"asc\" ? \"desc\" : \"asc\";\n        const rows = _.orderBy(cloneData, sortField, sort);\n\n        setData(rows);\n        setSort(sortType);\n        setSortField(sortField);\n    };\n\n    const searchHandler = (search: any) => {\n        setSearch(search);\n        setCurrentPage(0);\n    };\n\n    const getFilteredData = () => {\n        if (!search) {\n            return data;\n        }\n\n        let result = data.filter((item: any) => {\n            return (\n                item[\"firstName\"]\n                    .toLowerCase()\n                    .includes(search.toLowerCase()) ||\n                item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n                item[\"email\"].toLowerCase().includes(search.toLowerCase()) ||\n                item[\"phone\"].toLowerCase().includes(search.toLowerCase())\n            );\n        });\n\n        if (!result.length) {\n            result = data;\n        }\n\n        return result;\n    };\n\n    const pageSize = 15;\n\n    const filteredData = getFilteredData();\n    const displayData = _.chunk(filteredData, pageSize)[currentPage];\n\n    const currentTableData = useMemo(() => {\n        const firstPageIndex = (currentPage - 1) * pageSize;\n        const lastPageIndex = firstPageIndex + pageSize;\n        return data.slice(firstPageIndex, lastPageIndex);\n    }, [currentPage]);\n\n    return (\n        <div className=\"container\">\n            <TableSearch search={search} setSearch={searchHandler} />\n            <Table\n                data={displayData}\n                onSort={onSort}\n                sort={sort}\n                sortField={sortField}\n            />\n            <Pagination\n                className=\"pagination-bar\"\n                currentPage={currentPage}\n                totalCount={data.length}\n                pageSize={pageSize}\n                onPageChange={(page: any) => setCurrentPage(page)}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}