{"version":3,"sources":["../../../table-react/react-table/src/components/THead.tsx","../../../table-react/react-table/src/components/TBody.tsx","../../../table-react/react-table/src/components/Table.tsx","../../../table-react/react-table/src/components/TableSearch.tsx","../../../table-react/react-table/src/hooks/usePagination.tsx","../../../table-react/react-table/src/components/Pagination.tsx","../../../table-react/react-table/src/App.tsx","../../../table-react/react-table/src/index.tsx"],"names":["Thead","props","react_default","a","createElement","onClick","onSort","bind","sortField","sort","TBody","data","map","item","key","id","phone","firstName","lastName","email","Table","console","log","className","THead","components_TBody","TableSearch","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onSearch","type","onChange","event","target","DOTS","range","start","end","length","Array","from","_","idx","Pagination","onPageChange","totalCount","_props$siblingCount","siblingCount","currentPage","pageSize","paginationRange","_ref","_ref$siblingCount","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","concat","toConsumableArray","rightRange","middleRange","usePagination","lastPage","classnames","defineProperty","disabled","pageNumber","selected","App","Users","setData","_useState3","_useState4","search","setSearch","_useState5","_useState6","setSort","_useState7","_useState8","setSortField","_useState9","_useState10","setCurrentPage","filteredData","result","filter","toLowerCase","includes","getFilteredData","displayData","chunk","slice","components_TableSearch","components_Table","cloneData","sortType","rows","orderBy","components_Pagination","page","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.087df413.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Thead(props: any) {\n  return (\n    <thead>\n      <tr>\n        <th onClick={props.onSort.bind(null, \"id\")}>\n          ID {props.sortField === \"id\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"firstName\")}>\n          First Name{\" \"}\n          {props.sortField === \"firstName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"lastName\")}>\n          Last Name{\" \"}\n          {props.sortField === \"lastName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"email\")}>\n          E-mail{\" \"}\n          {props.sortField === \"email\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"phone\")}>\n          Phone{\" \"}\n          {props.sortField === \"phone\" ? <small>{props.sort}</small> : null}\n        </th>\n      </tr>\n    </thead>\n  );\n}\n\nexport default Thead;\n","import React from \"react\";\n\nfunction TBody(props: any) {\n  return (\n    <tbody>\n      {props.data.map((item: any) => (\n        <tr key={item.id + item.phone}>\n          <td>{item.id}</td>\n          <td>{item.firstName}</td>\n          <td>{item.lastName}</td>\n          <td>{item.email}</td>\n          <td>{item.phone}</td>\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nexport default TBody;\n","import React from \"react\";\nimport THead from \"./THead\";\nimport TBody from \"./TBody\";\n\nfunction Table(props: any) {\n    console.log(props);\n  return (\n    <table className=\"table\">\n      <THead\n        onSort={props.onSort}\n        sort={props.sort}\n        sortField={props.sortField}\n      />\n      <TBody data={props.data} />\n    </table>\n  );\n}\n\nexport default Table;\n","import React, { useState } from \"react\";\n\nfunction TableSearch(props: any) {\n  const [value, setValue] = useState(\"\");\n\n  const valueChangeHandler = (event: any) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div className=\"input-group\">\n      <div className=\"input-group-prepend\">\n        <button className=\"btn\" onClick={() => props.onSearch(value)}>\n          Search\n        </button>\n      </div>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        onChange={valueChangeHandler}\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default TableSearch;\n","import { useMemo } from \"react\";\n\nexport const DOTS = \"...\";\n\nconst range = (start: any, end: any) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount = 1,\n  currentPage,\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    const totalPageNumbers = siblingCount + 5;\n\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { usePagination, DOTS } from \"../hooks/usePagination\";\nimport \"../styles/pagination.scss\";\n\nconst Pagination = (props: any) => {\n  const {\n    onPageChange,\n    totalCount,\n    siblingCount = 2,\n    currentPage,\n    pageSize,\n    className,\n  } = props;\n\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  });\n\n  if (paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange.length];\n\n  return (\n    <ul\n      className={classnames(\"pagination-container\", { [className]: className })}\n    >\n      <li\n        className={classnames(\"pagination-item\", {\n          disabled: currentPage === 1,\n        })}\n        onClick={onPrevious}\n      >\n        <div className=\"arrow left\" />\n      </li>\n      {paginationRange.map((pageNumber) => {\n        if (pageNumber === DOTS) {\n          return <li className=\"pagination-item dots\" key={pageNumber}>&#8230;</li>;\n        }\n\n        return (\n          <li key={pageNumber}\n            className={classnames(\"pagination-item\", {\n              selected: pageNumber === currentPage,\n            })}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </li>\n        );\n      })}\n      <li\n        className={classnames(\"pagination-item\", {\n          disabled: currentPage === lastPage,\n        })}\n        onClick={onNext}\n      >\n        <div className=\"arrow right\" />\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useMemo } from \"react\";\nimport _ from \"lodash\";\n\nimport Table from \"./components/Table\";\nimport TableSearch from \"./components/TableSearch\";\nimport Pagination from \"./components/Pagination\";\nimport Users from \"./generated.json\";\nimport \"./styles/styles.scss\";\n\nfunction App() {\n  const [data, setData] = useState(Users);\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(\"asc\");\n  const [sortField, setSortField] = useState(\"id\");\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onSort = (sortField: any) => {\n    const cloneData = data.concat();\n    const sortType = sort === \"asc\" ? \"desc\" : \"asc\";\n    const rows = _.orderBy(cloneData, sortField, sort);\n\n    setData(rows);\n    setSort(sortType);\n    setSortField(sortField);\n  };\n\n  const searchHandler = (search: any) => {\n    setSearch(search);\n    setCurrentPage(0);\n  };\n\n  const getFilteredData = () => {\n    if (!search) {\n      return data;\n    }\n\n    let result = data.filter((item: any) => {\n      return (\n        item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"email\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"phone\"].toLowerCase().includes(search.toLowerCase())\n      );\n    });\n\n    if (!result.length) {\n      result = data;\n    }\n\n    return result;\n  };\n\n  const pageSize = 15;\n\n  const filteredData = getFilteredData();\n  const displayData = _.chunk(filteredData, pageSize)[currentPage]\n\n  console.log(currentPage);\n\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * pageSize;\n    const lastPageIndex = firstPageIndex + pageSize;\n    return data.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage]);\n\n  return (\n    <div className=\"container\">\n      <TableSearch onSearch={searchHandler} />\n      <Table\n        data={displayData}\n        onSort={onSort}\n        sort={sort}\n        sortField={sortField}\n      />\n      <Pagination\n        className=\"pagination-bar\"\n        currentPage={currentPage}\n        totalCount={data.length}\n        pageSize={pageSize}\n        onPageChange={(page: any) => setCurrentPage(page)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}