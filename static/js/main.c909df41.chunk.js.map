{"version":3,"sources":["Table/Table.js","TableSearch/TableSearch.js","App.js","index.js"],"names":["Table","props","react_default","a","createElement","className","onClick","onSort","bind","sortField","sort","data","map","item","key","id","phone","firstName","lastName","email","TableSearch","_useState","useState","_useState2","Object","slicedToArray","value","setValue","Fragment","onSearch","type","onChange","event","target","App","state","search","row","currentPage","cloneData","_this","concat","_","orderBy","setState","pageChangeHandler","_ref","selected","searchHandler","_this$state","this","result","filter","toLowerCase","includes","length","filteredData","getFilteredData","pageCount","Math","ceil","displayData","chunk","dist_default","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","forcePage","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c909df41.chunk.js","sourcesContent":["import React from 'react';\n\nexport default props => (\n  <table className=\"table\">\n    <thead>\n      <tr>\n        <th onClick={props.onSort.bind(null, \"id\")}>\n          ID {props.sortField === \"id\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"firstName\")}>\n          First Name{\" \"}\n          {props.sortField === \"firstName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"lastName\")}>\n          Last Name{\" \"}\n          {props.sortField === \"lastName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"email\")}>\n          E-mail{\" \"}\n          {props.sortField === \"email\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"phone\")}>\n          Phone{\" \"}\n          {props.sortField === \"phone\" ? <small>{props.sort}</small> : null}\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      {props.data.map(item => (\n        <tr\n          key={item.id + item.phone}\n        >\n          <td>{item.id}</td>\n          <td>{item.firstName}</td>\n          <td>{item.lastName}</td>\n          <td>{item.email}</td>\n          <td>{item.phone}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);","import React, {useState} from 'react'\n\nexport default props => {\n    const [value, setValue] = useState('')\n    const valueChangeHandler = event => {\n        setValue(event.target.value)\n      }\n\n    return (\n      <>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <button\n              className=\"btn\"\n              onClick={() => props.onSearch(value)}\n            >\n              Search\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            onChange={valueChangeHandler}\n            value={value}\n          />\n        </div>\n\n      </>\n    );\n}","import React, { Component } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport Table from \"./Table/Table\";\nimport TableSearch from \"./TableSearch/TableSearch\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\nimport data from './data.json';\n\nclass App extends Component {\n  state = {\n    data: data,\n    search: \"\",\n    sort: \"asc\",\n    sortField: \"id\",\n    row: null,\n    currentPage: 0,\n  };\n\n  onSort = (sortField) => {\n    const cloneData = this.state.data.concat();\n    const sort = this.state.sort === \"asc\" ? \"desc\" : \"asc\";\n    const data = _.orderBy(cloneData, sortField, sort);\n    this.setState({ data, sort, sortField });\n  };\n\n\n  pageChangeHandler = ({ selected }) =>\n    this.setState({ currentPage: selected });\n\n  searchHandler = (search) => {\n    this.setState({ search, currentPage: 0 });\n  };\n\n  getFilteredData() {\n    const { data, search } = this.state;\n\n    if (!search) {\n      return data;\n    }\n\n    var result = data.filter((item) => {\n      return (\n        item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"email\"].toLowerCase().includes(search.toLowerCase())\n      );\n    });\n    if (!result.length) {\n      result = this.state.data;\n    }\n    return result;\n  }\n\n  render() {\n    const pageSize = 20;\n\n    const filteredData = this.getFilteredData();\n    const pageCount = Math.ceil(filteredData.length / pageSize);\n    const displayData = _.chunk(filteredData, pageSize)[this.state.currentPage];\n    return (\n      <div className=\"container\">\n        {(\n          <React.Fragment>\n            <TableSearch onSearch={this.searchHandler} />\n            <Table\n              data={displayData}\n              onSort={this.onSort}\n              sort={this.state.sort}\n              sortField={this.state.sortField}\n            />\n          </React.Fragment>\n        )}\n\n        {this.state.data.length > pageSize ? (\n          <ReactPaginate\n            previousLabel={\"<\"}\n            nextLabel={\">\"}\n            breakLabel={\"...\"}\n            breakClassName={\"break-me\"}\n            pageCount={pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={this.pageChangeHandler}\n            containerClassName={\"pagination\"}\n            activeClassName={\"active\"}\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            nextClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextLinkClassName=\"page-link\"\n            forcePage={this.state.currentPage}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}