{"version":3,"sources":["Loader/Loader.js","Table/Table.js","ModeSelector/ModeSelector.js","TableSearch/TableSearch.js","App.js","index.js"],"names":["Loader_Loader","react_default","a","createElement","className","Table","props","onClick","onSort","bind","sortField","sort","data","map","item","key","id","phone","firstName","lastName","email","ModeSelector","style","display","justifyContent","padding","onSelect","TableSearch","_useState","useState","_useState2","Object","slicedToArray","value","setValue","Fragment","onSearch","type","onChange","event","target","App","state","isModeSelected","isLoading","search","row","currentPage","cloneData","_this","concat","_","orderBy","setState","modeSelectHandler","url","fetchData","pageChangeHandler","_ref","selected","searchHandler","fetch","response","json","this","_this$state","result","filter","toLowerCase","includes","length","filteredData","getFilteredData","pageCount","Math","ceil","displayData","chunk","dist_default","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","forcePage","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.79df0b5b.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.css';\n\nexport default () => <div className=\"lds-dual-ring\" />\n","import React from 'react';\n\nexport default props => (\n  <table className=\"table\">\n    <thead>\n      <tr>\n        <th onClick={props.onSort.bind(null, \"id\")}>\n          ID {props.sortField === \"id\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"firstName\")}>\n          First Name{\" \"}\n          {props.sortField === \"firstName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"lastName\")}>\n          Last Name{\" \"}\n          {props.sortField === \"lastName\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"email\")}>\n          E-mail{\" \"}\n          {props.sortField === \"email\" ? <small>{props.sort}</small> : null}\n        </th>\n        <th onClick={props.onSort.bind(null, \"phone\")}>\n          Phone{\" \"}\n          {props.sortField === \"phone\" ? <small>{props.sort}</small> : null}\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      {props.data.map(item => (\n        <tr\n          key={item.id + item.phone}\n        >\n          <td>{item.id}</td>\n          <td>{item.firstName}</td>\n          <td>{item.lastName}</td>\n          <td>{item.email}</td>\n          <td>{item.phone}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);","import React from 'react';\n\nexport default props =>{\n    const url = `http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`;\n    return (\n        <div style={{display:'flex', justifyContent:'center', padding: '50px 0'}}>\n            <button onClick={()=>props.onSelect(url)} className=\"btn\">Get data</button>\n        </div>\n    )\n}","import React, {useState} from 'react'\n\nexport default props => {\n    const [value, setValue] = useState('')\n    const valueChangeHandler = event => {\n        setValue(event.target.value)\n      }\n\n    return (\n      <>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <button\n              className=\"btn\"\n              onClick={() => props.onSearch(value)}\n            >\n              Search\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            onChange={valueChangeHandler}\n            value={value}\n          />\n        </div>\n\n      </>\n    );\n}","import React, { Component } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport Loader from \"./Loader/Loader\";\nimport Table from \"./Table/Table\";\nimport ModeSelector from \"./ModeSelector/ModeSelector\";\nimport TableSearch from \"./TableSearch/TableSearch\";\nimport _ from \"lodash\";\nimport \"./styles.css\";\n\nclass App extends Component {\n  state = {\n    isModeSelected: false,\n    isLoading: false,\n    data: [],\n    search: \"\",\n    sort: \"asc\",\n    sortField: \"id\",\n    row: null,\n    currentPage: 0,\n  };\n\n  async fetchData(url) {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort),\n    });\n  }\n  onSort = (sortField) => {\n    const cloneData = this.state.data.concat();\n    const sort = this.state.sort === \"asc\" ? \"desc\" : \"asc\";\n    const data = _.orderBy(cloneData, sortField, sort);\n    this.setState({ data, sort, sortField });\n  };\n\n  modeSelectHandler = (url) => {\n    this.setState({\n      isModeSelected: true,\n      isLoading: true,\n    });\n    this.fetchData(url);\n  };\n\n  pageChangeHandler = ({ selected }) =>\n    this.setState({ currentPage: selected });\n\n  searchHandler = (search) => {\n    this.setState({ search, currentPage: 0 });\n  };\n\n  getFilteredData() {\n    const { data, search } = this.state;\n\n    if (!search) {\n      return data;\n    }\n\n    var result = data.filter((item) => {\n      return (\n        item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"email\"].toLowerCase().includes(search.toLowerCase())\n      );\n    });\n    if (!result.length) {\n      result = this.state.data;\n    }\n    return result;\n  }\n\n  render() {\n    const pageSize = 50;\n    if (!this.state.isModeSelected) {\n      return (\n        <div className=\"container\">\n          <ModeSelector onSelect={this.modeSelectHandler} />\n        </div>\n      );\n    }\n\n    const filteredData = this.getFilteredData();\n    const pageCount = Math.ceil(filteredData.length / pageSize);\n    const displayData = _.chunk(filteredData, pageSize)[this.state.currentPage];\n    return (\n      <div className=\"container\">\n        {this.state.isLoading ? (\n          <Loader />\n        ) : (\n          <React.Fragment>\n            <TableSearch onSearch={this.searchHandler} />\n            <Table\n              data={displayData}\n              onSort={this.onSort}\n              sort={this.state.sort}\n              sortField={this.state.sortField}\n            />\n          </React.Fragment>\n        )}\n\n        {this.state.data.length > pageSize ? (\n          <ReactPaginate\n            previousLabel={\"<\"}\n            nextLabel={\">\"}\n            breakLabel={\"...\"}\n            breakClassName={\"break-me\"}\n            pageCount={pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={this.pageChangeHandler}\n            containerClassName={\"pagination\"}\n            activeClassName={\"active\"}\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            nextClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextLinkClassName=\"page-link\"\n            forcePage={this.state.currentPage}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}